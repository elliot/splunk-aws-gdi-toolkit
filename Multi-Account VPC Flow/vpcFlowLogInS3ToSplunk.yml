---
AWSTemplateFormatVersion: 2010-09-09
Description: This is a CloudFormation template to create logging infrastructure for VPC Flow events in an S3 bucket to send to Splunk over HEC via Firehose - https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html

Parameters:
  service:
    Type: String
    Description: service name
    Default: splunk-aws-gdi-tooklit

  stage:
    Type: String
    Description: Used to distinguish between stages of an environment
    Default: dev

  contact:
    Description: Used to identify a contact for the resources created in this stack.  As an example, this could be an email address or username.
    Type: String

  vpcFlowLogS3FileExpirationInDays:
    Description: How many days to keep the VPC Flow Log files in S3.
    Default: 366
    Type: String

  sqsQueueVisibilityTimeoutInSecond:
    Type: String
    Description: How long to let SQS messages be taken by the Lambda function before they become avaliable to be processed again.  Must be more than lambdaProcessorTimeout.
    Default: 630


Resources:
  # S3 resources
  vpcFlowLogS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${AWS::AccountId}-vpcflowlog-bucket"
      LifecycleConfiguration:
        Rules:
            - Id: !Sub "${AWS::AccountId}-vpcflowlog-bucket-cleanup"
              AbortIncompleteMultipartUpload:
                DaysAfterInitiation: 1
              Status: Enabled
            - Id: !Sub "$${AWS::AccountId}-vpcflowlog-bucket-expiration"
              ExpirationInDays: !Ref vpcFlowLogS3FileExpirationInDays
              Status: Enabled
      NotificationConfiguration:
        QueueConfigurations:
          - Event: "s3:ObjectCreated:Put"
            Filter:
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: ".gz"
            Queue: !GetAtt vpcFlowLogS3BucketNotificationSQSQueue.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
      - Key: service
        Value: !Ref service
      - Key: stage
        Value: !Ref stage
      - Key: contact
        Value: !Ref contact

  vpcFlowLogS33BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref vpcFlowLogS3Bucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
            - s3:GetBucketAcl
          Principal: 
            Service: delivery.logs.amazonaws.com
          Resource: !Sub "arn:aws:s3:::${AWS::AccountId}-vpcflowlog-bucket"
        - Effect: Allow
          Action:
            - s3:PutObject
          Principal: 
            Service: delivery.logs.amazonaws.com
          Resource: !Sub "arn:aws:s3:::${AWS::AccountId}-vpcflowlog-bucket/AWSLogs/*"
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control


  # S3 notification > SQS resources
  vpcFlowLogS3BucketNotificationSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::AccountId}-vpcflowlog-sqs-queue"
      Tags:
      - Key: service
        Value: !Ref service
      - Key: stage
        Value: !Ref stage
      - Key: contact
        Value: !Ref contact
      VisibilityTimeout: !Ref sqsQueueVisibilityTimeoutInSecond

  vpcFlowLogS3BucketNotificationSQSQueuePolicy: 
    Type: AWS::SQS::QueuePolicy
    Properties: 
      PolicyDocument:
        Version: 2012-10-17
        Id: !Sub "${AWS::AccountId}-vpcflowlog-sqs-queuePolicy"
        Statement:
        -
          Sid: Send messages to SQS
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
            - "SQS:SendMessage"
          Resource: "*"
          Condition:
            ArnLike: 
              "aws:SourceARN": !Sub "arn:aws:s3:::${AWS::AccountId}-vpcflowlog-bucket"
      Queues:
        - !Ref "vpcFlowLogS3BucketNotificationSQSQueue"


Outputs:
  vpcFlowLogS3BucketArn:
    Value: !GetAtt vpcFlowLogS3Bucket.Arn
  vpcFlowLogS3BucketNotificationSQSQueueArn:
    Value: !GetAtt vpcFlowLogS3BucketNotificationSQSQueue.Arn